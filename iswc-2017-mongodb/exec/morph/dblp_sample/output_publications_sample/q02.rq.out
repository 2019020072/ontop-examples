To override log4j configuration add JVM option: -Dlog4j.configuration=file:/home/.../your_log4j.properties
Loading log4j configuration: jar:file:/Users/xiao/src/morph-xr2rml/morph-xr2rml-dist/target/morph-xr2rml-dist-1.0-SNAPSHOT-jar-with-dependencies.jar!/xr2rml-log4j.properties
2017-05-12 16:24:44 INFO  [main] (MorphRunner.scala:57) - properties Directory = /Users/xiao/Development/obda-mongo/ontop-mongo/src/test/resources/dblp/morph
2017-05-12 16:24:44 INFO  [main] (MorphRunner.scala:58) - properties File      = output/q02.rq.properties
Reading configuration file : /Users/xiao/Development/obda-mongo/ontop-mongo/src/test/resources/dblp/morph/output/q02.rq.properties
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:118) - Server active = false
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:121) - Server port number = 8080
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:124) - Output file = result.txt
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:144) - Output RDF syntax = TURTLE
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:153) - Output SPARQL result syntax = TURTLE
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:156) - Display result on std output = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:159) - Jena mode = memory
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:162) - SPARQL Query Optimization = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:165) - Optimization - Self join elimination = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:168) - Optimization - Self union elimination = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:171) - Optimization - Propagate conditions from a joined query = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:174) - Optimization - Reorder STG = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:177) - Optimization - Subquery elimination = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:180) - Optimization - Trans join subquery elimination = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:183) - Optimization - Trans stg subquery elimination = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:186) - Optimization - Subquery as view = false
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:189) - Cache the result of student.queries for join evaluation (non Relational DBs) = false
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:196) - RunnerFactory = fr.unice.i3s.morph.xr2rml.mongo.engine.MorphMongoRunnerFactory
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:199) - Remove Strange Chars From Literal Column = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:202) - URL-encode reserved chars IRI tempalte string = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:205) - URL-encode reserved chars in database values = true
2017-05-12 16:24:44 INFO  [main] (MorphProperties.scala:208) - String transformation = None
2017-05-12 16:24:45 INFO  [main] (R2RMLMappingDocument.scala:225) - Parsing mapping document /Users/xiao/Development/obda-mongo/ontop-mongo/src/test/resources/dblp/morph/dblp-mapping-publications.ttl
2017-05-12 16:24:46 INFO  [main] (MorphBaseRunner.scala:59) - ****************************************************************************************************************
2017-05-12 16:24:46 INFO  [main] (MorphBaseRunner.scala:60) - Running query translation. Content-type: null
2017-05-12 16:24:46 INFO  [main] (SparqlUtility.scala:224) - Request Accept: null. Negotiated: (application/sparql-results+xml,XML)
2017-05-12 16:24:46 INFO  [main] (SparqlQueryRewriter.scala:97) - SPARQL graph pattern:
(slice _ 100
  (distinct
    (project (?name)
      (bgp
        (triple ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> <http://dblp.l3s.de/d2r/Author>)
        (triple ?x <http://xmlns.com/foaf/0.1/name> ?name)
      ))))

2017-05-12 16:24:46 INFO  [main] (MorphMongoQueryTranslator.scala:84) - Triple pattern bindings computation time = 53ms.
2017-05-12 16:24:46 INFO  [main] (MorphMongoQueryTranslator.scala:85) - Triple pattern bindings:
   Binding(?x @rdf:type http://dblp.l3s.de/d2r/Author -> Author_Author)
   Binding(?x @http://xmlns.com/foaf/0.1/name ?name -> Author_name)
2017-05-12 16:24:46 WARN  [main] (MorphMongoQueryTranslator.scala:219) - SPARQL DISTINCT ignored in query translation.
2017-05-12 16:24:46 WARN  [main] (JsonPathToMongoTranslator.scala:464) - JSONPath expression [_id] did not match any rule. It is ignored.
2017-05-12 16:24:46 WARN  [main] (JsonPathToMongoTranslator.scala:464) - JSONPath expression [_id] did not match any rule. It is ignored.
2017-05-12 16:24:46 INFO  [main] (MorphBaseQueryTranslator.scala:107) - Query translation time (including bindings) = 137ms.
2017-05-12 16:24:46 INFO  [main] (MorphBaseRunner.scala:90) - SPARQL Query = 
PREFIX  :     <http://dblp.l3s.de/d2r/>
PREFIX  dcterms: <http://purl.org/dc/terms/>
PREFIX  foaf: <http://xmlns.com/foaf/0.1/>
PREFIX  dc:   <http://purl.org/dc/elements/1.1/>

SELECT DISTINCT  ?name
WHERE
  { ?x <http://www.w3.org/1999/02/22-rdf-syntax-ns#type> :Author .
    ?x foaf:name ?name
  }
LIMIT   100

2017-05-12 16:24:46 INFO  [main] (MorphBaseRunner.scala:91) - ------------------ Abstract Query ------------------ = 
[{ Binding(?x @rdf:type http://dblp.l3s.de/d2r/Author -> Author_Author)
  from   : db.publications.find({}), Iterator: Some($.authors.*)
  project: Set(_id AS ?x)
  where  : Set(NotNull(_id)) }
] INNER JOIN [
{ Binding(?x @http://xmlns.com/foaf/0.1/name ?name -> Author_name)
  from   : db.publications.find({}), Iterator: Some($.authors.*)
  project: Set(_id AS ?x, $.name AS ?name)
  where  : Set(NotNull(_id), NotNull($.name)) }
] ON Set(?x)
LIMIT 100
2017-05-12 16:24:46 INFO  [main] (MorphBaseRunner.scala:92) - ------------------ Concrete Query ------------------ = 
[{ Binding(?x @rdf:type http://dblp.l3s.de/d2r/Author -> Author_Author)
 MongoDBQuery[Collection: publications. Query: {}. Projection: {}] }
] INNER JOIN [
{ Binding(?x @http://xmlns.com/foaf/0.1/name ?name -> Author_name)
 MongoDBQuery[Collection: publications. Query: {'authors': {$elemMatch: {'name': {$exists: true, $ne: null}}}}. Projection: {}] }
] ON Set(?x)
LIMIT 100
2017-05-12 16:24:46 INFO  [main] (AbstractQueryInnerJoin.scala:223) - ===============================================================================
2017-05-12 16:24:46 INFO  [main] (AbstractQueryInnerJoin.scala:224) - Generating RDF triples from the inner join query:
[{ Binding(?x @rdf:type http://dblp.l3s.de/d2r/Author -> Author_Author)
 MongoDBQuery[Collection: publications. Query: {}. Projection: {}] }
] INNER JOIN [
{ Binding(?x @http://xmlns.com/foaf/0.1/name ?name -> Author_name)
 MongoDBQuery[Collection: publications. Query: {'authors': {$elemMatch: {'name': {$exists: true, $ne: null}}}}. Projection: {}] }
] ON Set(?x)
LIMIT 100
2017-05-12 16:24:46 INFO  [main] (MorphMongoDataSourceReader.scala:84) - Executing query: MongoDBQuery[Collection: publications. Query: {}. Projection: {}] with limit None
2017-05-12 16:24:47 INFO  [main] (MorphMongoDataSourceReader.scala:113) - Query returned 1059 result(s), 3264 result(s) after applying the iterator, in: 725 ms.
2017-05-12 16:24:47 INFO  [main] (AbstractQueryAtomicMongo.scala:476) - Atomic query generated 3264 RDF triples for binding
 Binding(?x @rdf:type http://dblp.l3s.de/d2r/Author -> Author_Author)
2017-05-12 16:24:47 INFO  [main] (AbstractQueryAtomicMongo.scala:483) - Atomic query generated 3264 RDF triples for all binding in 805 ms.
2017-05-12 16:24:47 INFO  [main] (MorphMongoDataSourceReader.scala:84) - Executing query: MongoDBQuery[Collection: publications. Query: {'authors': {$elemMatch: {'name': {$exists: true, $ne: null}}}}. Projection: {}] with limit None
2017-05-12 16:24:47 INFO  [main] (MorphMongoDataSourceReader.scala:113) - Query returned 1059 result(s), 3264 result(s) after applying the iterator, in: 127 ms.
2017-05-12 16:24:48 INFO  [main] (AbstractQueryAtomicMongo.scala:476) - Atomic query generated 3264 RDF triples for binding
 Binding(?x @http://xmlns.com/foaf/0.1/name ?name -> Author_name)
2017-05-12 16:24:48 INFO  [main] (AbstractQueryAtomicMongo.scala:483) - Atomic query generated 3264 RDF triples for all binding in 478 ms.
2017-05-12 16:24:48 INFO  [main] (AbstractQueryInnerJoin.scala:257) - Inner join on variable(s) Set(?x)
2017-05-12 16:24:48 INFO  [main] (AbstractQueryInnerJoin.scala:290) - Inner join computed 100 triples + 0 triples with no shared variable, in 217 ms.
2017-05-12 16:24:48 WARN  [main] (MorphMongoDataTranslator.scala:229) - Duration of query execution and generation of triples = 2361 ms.
2017-05-12 16:24:48 INFO  [main] (MorphMongoQueryProcessor.scala:139) - Result set contains 50 triples.
2017-05-12 16:24:48 INFO  [main] (MorphMongoQueryProcessor.scala:140) - Tabular result set:
--------------------------
| name                   |
==========================
| "Alessandro Artale"    |
| "Martin Giese"         |
| "A-Youn Park"          |
| "Peter Haase"          |
| "Ralf Möller"          |
| "Marco Ruzzi"          |
| "Thomas Ball"          |
| "Mikhail Roshchin"     |
| "William Aspray"       |
| "Alberto O. Mendelzon" |
| "Steffen Lamparter"    |
| "Arild Waaler"         |
| "Francesca Cesarini"   |
| "Phokion G. Kolaitis"  |
| "Seong-Whan Lee"       |
| "A. Frank Mayadas"     |
| "Clare Dixon"          |
| "Domenico Fabio Savo"  |
| "Ahmed Bouajjani"      |
| "Ahmet Soylu"          |
| "Yannis E. Ioannidis"  |
| "Christian Neuenstadt" |
| "Lucian Popa"          |
| "Manolis Koubarakis"   |
| "Diego Calvanese"      |
| "Thomas Hubauer"       |
| "Ian Horrocks"         |
| "Özgür L. Özçep"       |
| "Alberto Abelló"       |
| "Dmitriy Zheleznyakov" |
| "T. Nordtveit"         |
| "Alan Nash"            |
| "Ronald Fagin"         |
| "Herald Kllapi"        |
| "Ernesto Jiménez-Ruiz" |
| "A. Prasad Sistla"     |
| "Anuj Dawar"           |
| "Pierre Wolper"        |
| "Evgeny Kharlamov"     |
| "Vadim Savenkov"       |
| "Albin Ahmeti"         |
| "Michael Schmidt"      |
| "Albert Atserias"      |
| "Marta Kwiatkowska"    |
| "Johan W. Klüwer"      |
| "Moshe Y. Vardi"       |
| "Oscar Romero"         |
| "Axel Polleres"        |
| "Giovanni Soda"        |
| "Marc H. Graham"       |
--------------------------

2017-05-12 16:24:48 WARN  [main] (MorphMongoQueryProcessor.scala:146) - Time for late SPARQL query evaluation = 133ms.
2017-05-12 16:24:48 INFO  [main] (MorphBaseRunner.scala:104) - Query response output file: /Users/xiao/Development/obda-mongo/ontop-mongo/src/test/resources/dblp/morph/result.txt
2017-05-12 16:24:48 WARN  [main] (MorphBaseRunner.scala:111) - Overall SPARQL query processing time = 2646ms.
2017-05-12 16:24:48 WARN  [main] (MorphBaseRunner.scala:112) - **********************DONE****************************
2017-05-12 16:24:48 INFO  [main] (MorphRunner.scala:74) - Query result:
<?xml version="1.0"?>
<sparql xmlns="http://www.w3.org/2005/sparql-results#">
  <head>
    <variable name="name"/>
  </head>
  <results>
    <result>
      <binding name="name">
        <literal>Alessandro Artale</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Martin Giese</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>A-Youn Park</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Peter Haase</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Ralf Möller</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Marco Ruzzi</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Thomas Ball</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Mikhail Roshchin</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>William Aspray</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Alberto O. Mendelzon</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Steffen Lamparter</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Arild Waaler</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Francesca Cesarini</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Phokion G. Kolaitis</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Seong-Whan Lee</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>A. Frank Mayadas</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Clare Dixon</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Domenico Fabio Savo</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Ahmed Bouajjani</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Ahmet Soylu</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Yannis E. Ioannidis</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Christian Neuenstadt</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Lucian Popa</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Manolis Koubarakis</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Diego Calvanese</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Thomas Hubauer</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Ian Horrocks</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Özgür L. Özçep</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Alberto Abelló</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Dmitriy Zheleznyakov</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>T. Nordtveit</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Alan Nash</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Ronald Fagin</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Herald Kllapi</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Ernesto Jiménez-Ruiz</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>A. Prasad Sistla</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Anuj Dawar</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Pierre Wolper</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Evgeny Kharlamov</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Vadim Savenkov</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Albin Ahmeti</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Michael Schmidt</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Albert Atserias</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Marta Kwiatkowska</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Johan W. Klüwer</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Moshe Y. Vardi</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Oscar Romero</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Axel Polleres</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Giovanni Soda</literal>
      </binding>
    </result>
    <result>
      <binding name="name">
        <literal>Marc H. Graham</literal>
      </binding>
    </result>
  </results>
</sparql>
2017-05-12 16:24:48 INFO  [main] (MorphRunner.scala:79) - Treatment completed, exiting.
